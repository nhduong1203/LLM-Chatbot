apiVersion: batch/v1
kind: Job
metadata:
  name: cassandra-init-job
spec:
  template:
    metadata:
      labels:
        app: cassandra-init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: cassandra-init
        image: cassandra:latest
        command:
        - "bash"
        - "-c"
        - >
          echo "Waiting for Cassandra to be ready...";
          until cqlsh cassandra -e 'DESCRIBE KEYSPACES'; do
            echo "Cassandra is not ready yet. Retrying in 5 seconds...";
            sleep 5;
          done;
          echo "Cassandra is ready. Running initialization script...";
          cqlsh cassandra -f /scripts/init.cql;
        volumeMounts:
        - name: cassandra-init-scripts
          mountPath: /scripts
      volumes:
      - name: cassandra-init-scripts
        configMap:
          name: cassandra-init-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cassandra-init-configmap
data:
  init.cql: |
    CREATE KEYSPACE IF NOT EXISTS mlops 
    WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};

    USE mlops;

    CREATE TABLE IF NOT EXISTS users (
        user_id TEXT PRIMARY KEY, 
        username TEXT,
        email TEXT,
        created_at TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS sessions (
        user_id TEXT,
        conversation_id TEXT,
        started_at TIMESTAMP,
        PRIMARY KEY (user_id, conversation_id)
    );

    CREATE TABLE IF NOT EXISTS messages (
        user_id TEXT,
        conversation_id TEXT,
        role TEXT, 
        message TEXT,
        timestamp TIMESTAMP,
        PRIMARY KEY ((conversation_id), timestamp)
    );
