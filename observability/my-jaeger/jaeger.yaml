apiVersion: v1
kind: Namespace
metadata:
  name: observability

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      nodeSelector:
        workload: system-services # Ensure deployment on specific nodes
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.43
        args: ["--reporter.grpc.host-port=jaeger-collector:14250"]
        ports:
        - containerPort: 6831 # For UDP (Thrift Compact)
          protocol: UDP
        - containerPort: 6832 # For UDP (Thrift Binary)
          protocol: UDP
        - containerPort: 5778 # For HTTP sampling
          protocol: TCP
        - containerPort: 14271 # Admin port
          protocol: TCP
      - name: jaeger-collector
        image: jaegertracing/jaeger-collector:1.43
        ports:
        - containerPort: 14250 # gRPC
          protocol: TCP
        - containerPort: 14268 # HTTP
          protocol: TCP
        - containerPort: 14269 # Admin port
          protocol: TCP
        env:
        - name: SPAN_STORAGE_TYPE
          value: memory
      - name: jaeger-query
        image: jaegertracing/jaeger-query:1.43
        ports:
        - containerPort: 16686 # Query UI
          protocol: TCP
        env:
        - name: SPAN_STORAGE_TYPE
          value: memory

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: observability
  labels:
    app: jaeger
spec:
  ports:
  - name: thrift-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: thrift-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: admin
    port: 5778
    protocol: TCP
    targetPort: 5778
  selector:
    app: jaeger
  clusterIP: None # For DaemonSet-like behavior

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: observability
  labels:
    app: jaeger
spec:
  type: NodePort
  ports:
  - name: http
    port: 80              # Expose the service on port 80
    protocol: TCP
    targetPort: 16686     # Forward traffic to the Jaeger Query UI container port 16686
    nodePort: 30002       # Specify a NodePort
  selector:
    app: jaeger

---

apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: observability
  labels:
    app: jaeger
spec:
  ports:
  - name: grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: http
    port: 14268
    protocol: TCP
    targetPort: 14268
  selector:
    app: jaeger
