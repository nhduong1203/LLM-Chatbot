apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
data:
  dashboards.yaml: |-
    apiVersion: 1 
    providers:
      # <string> an unique provider name
    - name: 'Luong Nguyen Dinh'
      # <int> org id. will default to orgId 1 if not specified
      orgId: 1
      # <string, required> name of the dashboard folder
      folder: ''
      # <string> folder UID. will be automatically generated if not specified
      folderUid: ''
      # <string, required> provider type. Required
      type: file
      # <bool> disable dashboard deletion
      disableDeletion: false
      # <int> how often Grafana will scan for changed dashboards
      updateIntervalSeconds: 10
      # <bool> allow updating provisioned dashboards from the UI
      allowUiUpdates: true
      options:
        # <string, required> path to dashboard files on disk. Required when using the 'file' type
        path: /opt/grafana/dashboards
        # <bool> use folder names from filesystem to create folders in Grafana
        foldersFromFilesStructure: true
  datasources.yaml: |-
    apiVersion: 1

    # list of datasources that should be deleted from the database
    deleteDatasources:
      - name: Prometheus
        orgId: 1

    # list of datasources to insert/update depending
    # what's available in the database
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.observability.svc.cluster.local:9090
        isDefault: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard
data:
  {{ (.Files.Glob "grafana-config/dashboards/*").AsConfig | nindent 2}}